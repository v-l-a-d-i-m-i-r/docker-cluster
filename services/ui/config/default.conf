# https://codex.so/resolving-subdomains-dynamically-via-nginx

# server {
#   listen       80;
#   server_name  localhost;

#   location / {
#     root   /usr/share/nginx/html;
#     index  index.html index.htm;
#   }

#   location /filebrowser/ {
#     proxy_pass http://$subdomain;
#   }

#   location /info {
#     default_type application/json;
#     return 200 '{
#       "ok": true
#     }';
#   }
# }

# server {
#   server_name localhost;
#   location / {
#     root   /usr/share/nginx/html;
#     index  index.html index.htm;
#   }
# }

# server {
#   server_name filebrowser.localhost;
#   location / {
#     proxy_pass http://filebrowser;
#   }
# }
http {

server {
  listen 80;

  # Define available domains and filling up subdomain variable
  server_name ~^(?<subdomain>.+).localhost;

  # Is subdomain is empty then show message without subdomain
  location / {
    # if ($subdomain = "") {
      root   /usr/share/nginx/html;
      index  index.html index.htm;
    # }

    if ($subdomain != "") {
      # rewrite ^([^.]*[^/])$ $1/ permanent;
      # resolver 127.0.0.1 [::1];
      proxy_pass http://filebrowser;
      break;
      # return 200 '{
      #   "ok": "$subdomain"
      # }';

    }
  }

  # # Otherwise
  # location / {
  #   proxy_pass http://$subdomain;
  # }
}
}
